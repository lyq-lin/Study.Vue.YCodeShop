{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h2\", null, \"请登录\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["D:\\PersonalFile\\WebStudy\\myShop-vue\\myshop-vue\\src\\pages\\Login\\Login.vue"],"sourcesContent":["<template>\r\n  <h2>请登录</h2>\r\n</template>\r\n\r\n<script setup>\r\nimport useUser from '@/stores/useUser'\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport useAuthenticationState from '@/hook/auth/useAuthenticationState';\r\n\r\nconst isPwdOrCode = ref(true);\r\nconst User = useUser();\r\nconst router = useRouter();\r\n\r\nconst loginModel = reactive({\r\n  phoneNumer: \"\",\r\n  password: \"\",\r\n  code: \"\"\r\n})\r\n\r\nonMounted(async () => {\r\n  const isAuth = ref(useAuthenticationState());\r\n  if (isAuth.value.state) {\r\n    router.push({\r\n      path: '/product/feature'\r\n    })\r\n  }\r\n})\r\n\r\nfunction ToCodeLogin() {\r\n  isPwdOrCode.value = !isPwdOrCode.value\r\n}\r\n\r\nasync function getCode(phone) {\r\n  await User.getCode(phone);\r\n}\r\n\r\nasync function login() {\r\n  const result = ref(false);\r\n\r\n  if (isPwdOrCode.value) {\r\n    result.value = await User.loginByPassword(loginModel.phoneNumer, loginModel.password);\r\n  } else {\r\n    result.value = await User.loginByCode(loginModel.phoneNumer, loginModel.code);\r\n  }\r\n\r\n  if (result.value === true) {\r\n    const jwtPayload = localStorage.getItem(\"authToken\");\r\n    const decodeJwt = jwt_decode(jwtPayload);\r\n\r\n    User.user.userId = decodeJwt[\"\"];\r\n    User.user.userName = decodeJwt[\"\"];\r\n    User.user.userRole = decodeJwt[\"\"];\r\n    User.user.jwtVersion = decodeJwt[\"\"];\r\n    User.user.exp = decodeJwt[\"\"]\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":";;uBACEA,mBAAA,CAAY,YAAR,KAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}