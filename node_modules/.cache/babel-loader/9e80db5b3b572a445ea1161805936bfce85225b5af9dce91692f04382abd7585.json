{"ast":null,"code":"import axios from \"axios\";\nimport { defineStore } from \"pinia\";\nconst BASE_URL = 'http://localhost:5169/';\nconst useUser = defineStore(\"User\", {\n  state: () => ({\n    isLoggedIn: false,\n    user: {\n      userId: \"\",\n      userName: \"\",\n      userRole: \"\",\n      jwtVersion: \"\",\n      exp: 0\n    }\n  }),\n  getters: {},\n  actions: {\n    async getCode(phone) {\n      await axios.post(BASE_URL + 'api/Login/GetCode', {\n        phone: {\n          regionNumber: 86,\n          phoneNumberValue: phone\n        },\n        password: \"\",\n        code: \"\"\n      });\n    },\n    async loginByPassword(phone, pwd) {\n      const result = await axios.post(BASE_URL + 'api/Login/LoginByPhoneAndPassword', {\n        phone: {\n          regionNumber: 86,\n          phoneNumberValue: phone\n        },\n        password: pwd,\n        code: \"\"\n      }).then(res => {\n        localStorage.setItem(\"authToken\", res.data.data);\n        this.isLoggedIn = true;\n        return res.data.success;\n      });\n      return result;\n    },\n    async loginByCode(phone, code) {\n      const result = await axios.post(BASE_URL + 'api/Login/LoginByPhoneAndCode', {\n        phone: {\n          regionNumber: 86,\n          phoneNumberValue: phone\n        },\n        password: \"\",\n        code: code\n      }).then(res => {\n        localStorage.setItem(\"authToken\", res.data.data);\n        this.isLoggedIn = true;\n        return res.data.success;\n      });\n      return result;\n    },\n    async logout() {\n      localStorage.removeItem(\"authToken\");\n      this.isLoggedIn = false;\n      //todo: 向后端发送登出请求，改变JwtVersion\n      const result = axios.post(BASE_URL + 'api/Login/Logout').then(res => {\n        return res.data.success;\n      });\n      return result;\n    },\n    async register(regisertModel) {\n      const result = axios.post(BASE_URL + 'api/User/AddNewUser', {\n        phone: {\n          regionNumber: 86,\n          phoneNumberValue: regisertModel.phoneNumber\n        },\n        name: regisertModel.userName,\n        password: regisertModel.password,\n        code: regisertModel.code\n      }).then(res => {\n        return res.data.success;\n      });\n    }\n  }\n});\nexport default useUser;","map":{"version":3,"names":["axios","defineStore","BASE_URL","useUser","state","isLoggedIn","user","userId","userName","userRole","jwtVersion","exp","getters","actions","getCode","phone","post","regionNumber","phoneNumberValue","password","code","loginByPassword","pwd","result","then","res","localStorage","setItem","data","success","loginByCode","logout","removeItem","register","regisertModel","phoneNumber","name"],"sources":["D:/PersonalFile/WebStudy/myShop-vue/myshop-vue/src/stores/useUser.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { defineStore } from \"pinia\"\r\n\r\nconst BASE_URL = 'http://localhost:5169/'\r\n\r\nconst useUser = defineStore(\"User\", {\r\n    state: () => ({\r\n        isLoggedIn: false,\r\n        user: ({\r\n            userId: \"\",\r\n            userName: \"\",\r\n            userRole: \"\",\r\n            jwtVersion: \"\",\r\n            exp: 0\r\n        })\r\n    }),\r\n    getters: {\r\n\r\n    },\r\n    actions: {\r\n        async getCode(phone) {\r\n            await axios.post(BASE_URL + 'api/Login/GetCode', {\r\n                phone: {\r\n                    regionNumber: 86,\r\n                    phoneNumberValue: phone\r\n                },\r\n                password: \"\",\r\n                code: \"\"\r\n            })\r\n        },\r\n\r\n        async loginByPassword(phone, pwd) {\r\n            const result = await axios.post(BASE_URL + 'api/Login/LoginByPhoneAndPassword', {\r\n                phone: {\r\n                    regionNumber: 86,\r\n                    phoneNumberValue: phone\r\n                },\r\n                password: pwd,\r\n                code: \"\"\r\n            }).then(res => {\r\n                localStorage.setItem(\"authToken\", res.data.data)\r\n                this.isLoggedIn = true;\r\n\r\n                return res.data.success;\r\n            })\r\n\r\n            return result;\r\n        },\r\n        async loginByCode(phone, code) {\r\n            const result = await axios.post(BASE_URL + 'api/Login/LoginByPhoneAndCode', {\r\n                phone: {\r\n                    regionNumber: 86,\r\n                    phoneNumberValue: phone\r\n                },\r\n                password: \"\",\r\n                code: code\r\n            }).then(res => {\r\n                localStorage.setItem(\"authToken\", res.data.data)\r\n                this.isLoggedIn = true;\r\n                return res.data.success;\r\n            })\r\n\r\n            return result;\r\n        },\r\n\r\n        async logout() {\r\n            localStorage.removeItem(\"authToken\");\r\n            this.isLoggedIn = false;\r\n            //todo: 向后端发送登出请求，改变JwtVersion\r\n            const result = axios.post(BASE_URL + 'api/Login/Logout').then(res => {\r\n                return res.data.success;\r\n            })\r\n\r\n            return result;\r\n        },\r\n        async register(regisertModel) {\r\n            const result = axios.post(BASE_URL + 'api/User/AddNewUser', {\r\n                phone: {\r\n                    regionNumber: 86,\r\n                    phoneNumberValue: regisertModel.phoneNumber\r\n                },\r\n                name: regisertModel.userName,\r\n                password: regisertModel.password,\r\n                code: regisertModel.code\r\n\r\n            }).then(res => {\r\n                return res.data.success\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nexport default useUser;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,QAAQ,GAAG,wBAAwB;AAEzC,MAAMC,OAAO,GAAGF,WAAW,CAAC,MAAM,EAAE;EAChCG,KAAK,EAAEA,CAAA,MAAO;IACVC,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAG;MACHC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,GAAG,EAAE;IACT;EACJ,CAAC,CAAC;EACFC,OAAO,EAAE,CAET,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,OAAOA,CAACC,KAAK,EAAE;MACjB,MAAMf,KAAK,CAACgB,IAAI,CAACd,QAAQ,GAAG,mBAAmB,EAAE;QAC7Ca,KAAK,EAAE;UACHE,YAAY,EAAE,EAAE;UAChBC,gBAAgB,EAAEH;QACtB,CAAC;QACDI,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,eAAeA,CAACN,KAAK,EAAEO,GAAG,EAAE;MAC9B,MAAMC,MAAM,GAAG,MAAMvB,KAAK,CAACgB,IAAI,CAACd,QAAQ,GAAG,mCAAmC,EAAE;QAC5Ea,KAAK,EAAE;UACHE,YAAY,EAAE,EAAE;UAChBC,gBAAgB,EAAEH;QACtB,CAAC;QACDI,QAAQ,EAAEG,GAAG;QACbF,IAAI,EAAE;MACV,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAI;QACXC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;QAChD,IAAI,CAACvB,UAAU,GAAG,IAAI;QAEtB,OAAOoB,GAAG,CAACG,IAAI,CAACC,OAAO;MAC3B,CAAC,CAAC;MAEF,OAAON,MAAM;IACjB,CAAC;IACD,MAAMO,WAAWA,CAACf,KAAK,EAAEK,IAAI,EAAE;MAC3B,MAAMG,MAAM,GAAG,MAAMvB,KAAK,CAACgB,IAAI,CAACd,QAAQ,GAAG,+BAA+B,EAAE;QACxEa,KAAK,EAAE;UACHE,YAAY,EAAE,EAAE;UAChBC,gBAAgB,EAAEH;QACtB,CAAC;QACDI,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAEA;MACV,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAI;QACXC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;QAChD,IAAI,CAACvB,UAAU,GAAG,IAAI;QACtB,OAAOoB,GAAG,CAACG,IAAI,CAACC,OAAO;MAC3B,CAAC,CAAC;MAEF,OAAON,MAAM;IACjB,CAAC;IAED,MAAMQ,MAAMA,CAAA,EAAG;MACXL,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;MACpC,IAAI,CAAC3B,UAAU,GAAG,KAAK;MACvB;MACA,MAAMkB,MAAM,GAAGvB,KAAK,CAACgB,IAAI,CAACd,QAAQ,GAAG,kBAAkB,CAAC,CAACsB,IAAI,CAACC,GAAG,IAAI;QACjE,OAAOA,GAAG,CAACG,IAAI,CAACC,OAAO;MAC3B,CAAC,CAAC;MAEF,OAAON,MAAM;IACjB,CAAC;IACD,MAAMU,QAAQA,CAACC,aAAa,EAAE;MAC1B,MAAMX,MAAM,GAAGvB,KAAK,CAACgB,IAAI,CAACd,QAAQ,GAAG,qBAAqB,EAAE;QACxDa,KAAK,EAAE;UACHE,YAAY,EAAE,EAAE;UAChBC,gBAAgB,EAAEgB,aAAa,CAACC;QACpC,CAAC;QACDC,IAAI,EAAEF,aAAa,CAAC1B,QAAQ;QAC5BW,QAAQ,EAAEe,aAAa,CAACf,QAAQ;QAChCC,IAAI,EAAEc,aAAa,CAACd;MAExB,CAAC,CAAC,CAACI,IAAI,CAACC,GAAG,IAAI;QACX,OAAOA,GAAG,CAACG,IAAI,CAACC,OAAO;MAC3B,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,eAAe1B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}