{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2a2af8af\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"请登录\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"phone-number\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"pwssword\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"code\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    modelValue: $setup.loginModel.phoneNumber,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginModel.phoneNumber = $event),\n    placeholder: \"请输入手机号码\",\n    size: \"large\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), $setup.isPwdOrCode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n    modelValue: $setup.loginModel.password,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginModel.password = $event),\n    type: \"password\",\n    placeholder: \"请输入密码\",\n    size: \"large\",\n    \"show-password\": \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_input, {\n    modelValue: $setup.loginModel.code,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.loginModel.code = $event),\n    placeholder: \"请输入验证码\",\n    size: \"large\",\n    style: {\n      \"width\": \"80%\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    color: \"#626aef\",\n    size: \"large\",\n    style: {\n      \"margin-left\": \"15px\"\n    },\n    onClick: _cache[3] || (_cache[3] = $event => $setup.getCode($setup.loginModel.phoneNumber))\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 获取验证码 \")]),\n    _: 1 /* STABLE */\n  })])), _createVNode(_component_el_button, {\n    color: \"#626aef\",\n    size: \"large\",\n    class: \"loginButton\",\n    onClick: $setup.login\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" 登录 \")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"a\", {\n    onClick: $setup.ToCodeLogin\n  }, _toDisplayString($setup.isPwdOrCode ? \"使用验证码登录\" : \"使用密码登录\"), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_el_input","$setup","loginModel","phoneNumber","$event","placeholder","size","isPwdOrCode","_createElementBlock","_hoisted_4","password","type","_hoisted_5","code","style","_component_el_button","color","onClick","_cache","getCode","login","ToCodeLogin","_toDisplayString"],"sources":["D:\\PersonalFile\\WebStudy\\myShop-vue\\myshop-vue\\src\\pages\\Login\\Login.vue"],"sourcesContent":["<template>\r\n  <h2>请登录</h2>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"phone-number\">\r\n      <el-input v-model=\"loginModel.phoneNumber\" placeholder=\"请输入手机号码\" size=\"large\" />\r\n    </div>\r\n    <div class=\"pwssword\" v-if=\"isPwdOrCode\">\r\n      <el-input v-model=\"loginModel.password\" type=\"password\" placeholder=\"请输入密码\" size=\"large\" show-password />\r\n    </div>\r\n    <div class=\"code\" v-else>\r\n      <el-input v-model=\"loginModel.code\" placeholder=\"请输入验证码\" size=\"large\" style=\"width:80%\" />\r\n\r\n      <el-button color=\"#626aef\" size=\"large\" style=\"margin-left:15px;\" @click=\"getCode(loginModel.phoneNumber)\">\r\n        获取验证码\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-button color=\"#626aef\" size=\"large\" class=\"loginButton\" @click=\"login\">\r\n      登录\r\n    </el-button>\r\n\r\n    <a @click=\"ToCodeLogin\">{{ isPwdOrCode ? \"使用验证码登录\" : \"使用密码登录\" }}</a>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport useUser from '@/stores/useUser'\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport useAuthenticationState from '@/hook/auth/useAuthenticationState';\r\n\r\nconst isPwdOrCode = ref(true);\r\nconst User = useUser();\r\nconst router = useRouter();\r\n\r\nconst loginModel = reactive({\r\n  phoneNumber: \"\",\r\n  password: \"\",\r\n  code: \"\"\r\n})\r\n\r\nonMounted(async () => {\r\n  const isAuth = ref(useAuthenticationState());\r\n  if (isAuth.value.state) {\r\n    router.push({\r\n      path: '/product/feature'\r\n    })\r\n  }\r\n})\r\n\r\nfunction ToCodeLogin() {\r\n  isPwdOrCode.value = !isPwdOrCode.value\r\n}\r\n\r\nasync function getCode(phone) {\r\n  await User.getCode(phone);\r\n}\r\n\r\nasync function login() {\r\n  const result = ref(false);\r\n\r\n  if (isPwdOrCode.value) {\r\n    result.value = await User.loginByPassword(loginModel.phoneNumer, loginModel.password);\r\n  } else {\r\n    result.value = await User.loginByCode(loginModel.phoneNumer, loginModel.code);\r\n  }\r\n\r\n  if (result.value === true) {\r\n    const jwtPayload = localStorage.getItem(\"authToken\");\r\n    const decodeJwt = jwt_decode(jwtPayload);\r\n\r\n    User.user.userId = decodeJwt[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"];\r\n    User.user.userName = decodeJwt[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"];\r\n    User.user.userRole = decodeJwt[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\r\n    User.user.jwtVersion = decodeJwt[\"JwtVersion\"];\r\n    User.user.exp = decodeJwt[\"exp\"];\r\n\r\n    router.push({\r\n      path: '/product/feature'\r\n    })\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 95%;\r\n}\r\n\r\n.container>div {\r\n  width: 50%;\r\n  margin: 15px;\r\n}\r\n\r\n.loginButton {\r\n  margin: 20px;\r\n}\r\n\r\na:hover {\r\n  color: purple;\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";;gEACEA,mBAAA,CAAY,YAAR,KAAG;;EAEFC,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAc;;;EAGpBA,KAAK,EAAC;;;;EAGNA,KAAK,EAAC;;;;;6DATbC,UAAY,EAEZF,mBAAA,CAoBM,OApBNG,UAoBM,GAnBJH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAAgFC,mBAAA;gBAA7DC,MAAA,CAAAC,UAAU,CAACC,WAAW;+DAAtBF,MAAA,CAAAC,UAAU,CAACC,WAAW,GAAAC,MAAA;IAAEC,WAAW,EAAC,SAAS;IAACC,IAAI,EAAC;6CAE5CL,MAAA,CAAAM,WAAW,I,cAAvCC,mBAAA,CAEM,OAFNC,UAEM,GADJV,YAAA,CAAyGC,mBAAA;gBAAtFC,MAAA,CAAAC,UAAU,CAACQ,QAAQ;+DAAnBT,MAAA,CAAAC,UAAU,CAACQ,QAAQ,GAAAN,MAAA;IAAEO,IAAI,EAAC,UAAU;IAACN,WAAW,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAAC,eAAa,EAAb;8DAE3FE,mBAAA,CAMM,OANNI,UAMM,GALJb,YAAA,CAA0FC,mBAAA;gBAAvEC,MAAA,CAAAC,UAAU,CAACW,IAAI;+DAAfZ,MAAA,CAAAC,UAAU,CAACW,IAAI,GAAAT,MAAA;IAAEC,WAAW,EAAC,QAAQ;IAACC,IAAI,EAAC,OAAO;IAACQ,KAAiB,EAAjB;MAAA;IAAA;2CAEtEf,YAAA,CAEYgB,oBAAA;IAFDC,KAAK,EAAC,SAAS;IAACV,IAAI,EAAC,OAAO;IAACQ,KAAyB,EAAzB;MAAA;IAAA,CAAyB;IAAEG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAd,MAAA,IAAEH,MAAA,CAAAkB,OAAO,CAAClB,MAAA,CAAAC,UAAU,CAACC,WAAW;;sBAAG,MAE3G,C,iBAF2G,SAE3G,E;;SAGFJ,YAAA,CAEYgB,oBAAA;IAFDC,KAAK,EAAC,SAAS;IAACV,IAAI,EAAC,OAAO;IAACX,KAAK,EAAC,aAAa;IAAEsB,OAAK,EAAEhB,MAAA,CAAAmB;;sBAAO,MAE3E,C,iBAF2E,MAE3E,E;;MAEA1B,mBAAA,CAAoE;IAAhEuB,OAAK,EAAEhB,MAAA,CAAAoB;EAAW,GAAAC,gBAAA,CAAKrB,MAAA,CAAAM,WAAW,wC"},"metadata":{},"sourceType":"module","externalDependencies":[]}