{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport useCart from \"@/stores/useCart\";\nimport useProductList from \"@/stores/useProductList\";\nimport { onMounted, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Cart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ProductList = useProductList();\n    const router = useRouter();\n    const Cart = useCart();\n    const CartProducts = ref([]);\n    onMounted(async () => {\n      Cart.CartProduct = [];\n\n      //1. 获得购物车数据\n      for (let item of Cart.Cart) {\n        //2. 根据购物车的ProductId去获取商品\n        var product = await ProductList.getProductById(item.ProductId);\n        if (product === undefined) {\n          continue;\n        }\n\n        //3. 根据商品Id和TypeId去查找套餐\n        var variantByProduct = await ProductList.getProductVariant(item.ProductId, item.ProductTypeId);\n        if (variantByProduct === undefined) {\n          continue;\n        }\n\n        //4. 定义一个对象按需存储结构\n        var cartObj = {\n          ProductId: product.id,\n          Title: product.title,\n          ImageUrl: product.imageUrl,\n          ProductTypeId: variantByProduct.productTypeId,\n          ProductType: variantByProduct.productType.name,\n          Price: variantByProduct.price,\n          Quantity: item.Quantity\n        };\n\n        //5. 拼接好数据后存入数组\n        Cart.CartProduct.push(cartObj);\n      }\n      CartProducts.value = Cart.CartProduct;\n    });\n    const __returned__ = {\n      ProductList,\n      router,\n      Cart,\n      CartProducts,\n      get useCart() {\n        return useCart;\n      },\n      get useProductList() {\n        return useProductList;\n      },\n      onMounted,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useCart","useProductList","onMounted","ref","useRouter","ProductList","router","Cart","CartProducts","CartProduct","item","product","getProductById","ProductId","undefined","variantByProduct","getProductVariant","ProductTypeId","cartObj","id","Title","title","ImageUrl","imageUrl","productTypeId","ProductType","productType","name","Price","price","Quantity","push","value"],"sources":["D:/PersonalFile/WebStudy/myShop-vue/myshop-vue/src/pages/Cart/Cart.vue"],"sourcesContent":["<template>\r\n    <h1>购物车页面</h1>\r\n</template>\r\n\r\n<script setup>\r\nimport useCart from \"@/stores/useCart\";\r\nimport useProductList from \"@/stores/useProductList\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\"\r\n\r\nconst ProductList = useProductList();\r\nconst router = useRouter();\r\nconst Cart = useCart();\r\nconst CartProducts = ref([])\r\n\r\nonMounted(async () => {\r\n    Cart.CartProduct = [];\r\n\r\n    //1. 获得购物车数据\r\n    for (let item of Cart.Cart) {\r\n        //2. 根据购物车的ProductId去获取商品\r\n        var product = await ProductList.getProductById(item.ProductId);\r\n        if (product === undefined) {\r\n            continue;\r\n        }\r\n\r\n        //3. 根据商品Id和TypeId去查找套餐\r\n        var variantByProduct = await ProductList.getProductVariant(item.ProductId, item.ProductTypeId);\r\n        if (variantByProduct === undefined) {\r\n            continue;\r\n        }\r\n\r\n        //4. 定义一个对象按需存储结构\r\n        var cartObj = {\r\n            ProductId: product.id,\r\n            Title: product.title,\r\n            ImageUrl: product.imageUrl,\r\n            ProductTypeId: variantByProduct.productTypeId,\r\n            ProductType: variantByProduct.productType.name,\r\n            Price: variantByProduct.price,\r\n            Quantity: item.Quantity\r\n        };\r\n\r\n        //5. 拼接好数据后存入数组\r\n        Cart.CartProduct.push(cartObj);\r\n    }\r\n\r\n    CartProducts.value = Cart.CartProduct\r\n})\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":";AAKA,OAAOA,OAAO,MAAM,kBAAkB;AACtC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;IACpC,MAAMK,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGP,OAAO,CAAC,CAAC;IACtB,MAAMQ,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAE5BD,SAAS,CAAC,YAAY;MAClBK,IAAI,CAACE,WAAW,GAAG,EAAE;;MAErB;MACA,KAAK,IAAIC,IAAI,IAAIH,IAAI,CAACA,IAAI,EAAE;QACxB;QACA,IAAII,OAAO,GAAG,MAAMN,WAAW,CAACO,cAAc,CAACF,IAAI,CAACG,SAAS,CAAC;QAC9D,IAAIF,OAAO,KAAKG,SAAS,EAAE;UACvB;QACJ;;QAEA;QACA,IAAIC,gBAAgB,GAAG,MAAMV,WAAW,CAACW,iBAAiB,CAACN,IAAI,CAACG,SAAS,EAAEH,IAAI,CAACO,aAAa,CAAC;QAC9F,IAAIF,gBAAgB,KAAKD,SAAS,EAAE;UAChC;QACJ;;QAEA;QACA,IAAII,OAAO,GAAG;UACVL,SAAS,EAAEF,OAAO,CAACQ,EAAE;UACrBC,KAAK,EAAET,OAAO,CAACU,KAAK;UACpBC,QAAQ,EAAEX,OAAO,CAACY,QAAQ;UAC1BN,aAAa,EAAEF,gBAAgB,CAACS,aAAa;UAC7CC,WAAW,EAAEV,gBAAgB,CAACW,WAAW,CAACC,IAAI;UAC9CC,KAAK,EAAEb,gBAAgB,CAACc,KAAK;UAC7BC,QAAQ,EAAEpB,IAAI,CAACoB;QACnB,CAAC;;QAED;QACAvB,IAAI,CAACE,WAAW,CAACsB,IAAI,CAACb,OAAO,CAAC;MAClC;MAEAV,YAAY,CAACwB,KAAK,GAAGzB,IAAI,CAACE,WAAW;IACzC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}