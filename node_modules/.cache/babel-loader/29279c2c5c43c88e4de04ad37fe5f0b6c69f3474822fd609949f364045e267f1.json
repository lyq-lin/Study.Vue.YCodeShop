{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport useOrder from \"@/stores/useOrder\";\nimport useProductList from \"@/stores/useProductList\";\nimport { onMounted, reactive, ref } from \"vue\";\nexport default {\n  __name: 'Order',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ProductList = useProductList();\n    const Order = useOrder();\n    const OrderProduct = ref([]);\n    function ToDetail(order) {\n      console.log(order.value);\n    }\n    onMounted(async () => {\n      //组装Product\n\n      const OrderObj = await Order.getOrder();\n      for (let detail of OrderObj) {\n        //第一次遍历的是订单\n        const OrderDetail = await Order.getOrderDetails(detail.id); //根据订单id去找该订单详情 \n\n        //这是一笔订单下的\n        const orderdetails = []; //我需要该笔订单的细节\n\n        for (let productDetail of OrderDetail) {\n          //第二次遍历的是订单里的订单详情\n\n          //向Product发送ProductId 请求商品  \n          const product = await ProductList.getProductById(productDetail.productId);\n\n          //定义一个结构体，存储图片和标题，用于展示订单详情\n          const pdObj = {\n            productId: product.id,\n            title: product.title,\n            imageUrl: product.imageUrl,\n            quantity: productDetail.quantity,\n            totalPrice: productDetail.totalPrice\n          };\n          orderdetails.push(pdObj);\n        }\n        const OrderProductDetail = reactive({\n          orderId: detail.id,\n          title: orderdetails[0].title + `等${OrderDetail.length}件商品`,\n          dateTime: detail.orderDate,\n          totalPrice: detail.totalPrice,\n          imageUrl: orderdetails[0].imageUrl,\n          orderDetails: orderdetails\n        });\n        OrderProduct.value.push(OrderProductDetail);\n      }\n    });\n    const __returned__ = {\n      ProductList,\n      Order,\n      OrderProduct,\n      ToDetail,\n      get useOrder() {\n        return useOrder;\n      },\n      get useProductList() {\n        return useProductList;\n      },\n      onMounted,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useOrder","useProductList","onMounted","reactive","ref","ProductList","Order","OrderProduct","ToDetail","order","console","log","value","OrderObj","getOrder","detail","OrderDetail","getOrderDetails","id","orderdetails","productDetail","product","getProductById","productId","pdObj","title","imageUrl","quantity","totalPrice","push","OrderProductDetail","orderId","length","dateTime","orderDate","orderDetails"],"sources":["D:/PersonalFile/WebStudy/myShop-vue/myshop-vue/src/pages/Order/Order.vue"],"sourcesContent":["<template>\r\n    <h1>已支付订单</h1>\r\n\r\n    <template v-if=\"Order.Order.length <= 0\">\r\n        <span>您当前尚未购物</span>\r\n    </template>\r\n\r\n    <template v-else>\r\n\r\n        <template v-for=\"order in OrderProduct\" :key=\"order.orderId\">\r\n            <div class=\"container\">\r\n                <div class=\"image-wrapper\">\r\n                    <img :src=\"order.imageUrl\" class=\"image\" />\r\n                </div>\r\n                <div class=\"details\">\r\n                    <h4>{{ order.title }}</h4>\r\n                    <span>{{ new Date(order.dateTime).toLocaleDateString() }} {{ new\r\n                        Date(order.dateTime).toLocaleTimeString() }}</span>\r\n                    <br>\r\n                    <a @click=\"ToDetail(order)\">查看详情</a>\r\n                </div>\r\n                <div class=\"order-price\">￥{{ order.totalPrice }}</div>\r\n            </div>\r\n        </template>\r\n    </template>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport useOrder from \"@/stores/useOrder\"\r\nimport useProductList from \"@/stores/useProductList\";\r\nimport { onMounted, reactive, ref } from \"vue\";\r\n\r\nconst ProductList = useProductList();\r\nconst Order = useOrder();\r\n\r\nconst OrderProduct = ref([]);\r\n\r\nfunction ToDetail(order) {\r\n    console.log(order.value)\r\n}\r\n\r\nonMounted(async () => {\r\n    //组装Product\r\n\r\n    const OrderObj = await Order.getOrder();\r\n\r\n    for (let detail of OrderObj) {      //第一次遍历的是订单\r\n        const OrderDetail = await Order.getOrderDetails(detail.id); //根据订单id去找该订单详情 \r\n\r\n        //这是一笔订单下的\r\n        const orderdetails = []     //我需要该笔订单的细节\r\n\r\n        for (let productDetail of OrderDetail) {    //第二次遍历的是订单里的订单详情\r\n\r\n            //向Product发送ProductId 请求商品  \r\n            const product = await ProductList.getProductById(productDetail.productId);\r\n\r\n            //定义一个结构体，存储图片和标题，用于展示订单详情\r\n            const pdObj = {\r\n                productId: product.id,\r\n                title: product.title,\r\n                imageUrl: product.imageUrl,\r\n                quantity: productDetail.quantity,\r\n                totalPrice: productDetail.totalPrice\r\n            }\r\n            orderdetails.push(pdObj);\r\n        }\r\n\r\n        const OrderProductDetail = reactive({\r\n            orderId: detail.id,\r\n            title: orderdetails[0].title + `等${OrderDetail.length}件商品`,\r\n            dateTime: detail.orderDate,\r\n            totalPrice: detail.totalPrice,\r\n            imageUrl: orderdetails[0].imageUrl,\r\n            orderDetails: orderdetails\r\n        })\r\n\r\n        OrderProduct.value.push(OrderProductDetail)\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    display: flex;\r\n    padding: 6px;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.image-wrapper {\r\n    width: 150px;\r\n    text-align: center;\r\n}\r\n\r\n.image {\r\n    max-height: 150px;\r\n    max-width: 150px;\r\n    padding: 6px;\r\n}\r\n\r\nimg:hover {\r\n    transform: scale(1.1)\r\n}\r\n\r\n.details {\r\n    flex-grow: 1;\r\n    padding: 6px;\r\n    margin-left: 20px;\r\n}\r\n\r\n.order-price {\r\n    font-weight: 600;\r\n    font-size: 1.2em;\r\n    text-align: right;\r\n}\r\n\r\na {\r\n    color: purple;\r\n    text-decoration: underline;\r\n}\r\n\r\na:hover {\r\n    text-decoration: none;\r\n}\r\n</style>"],"mappings":";AA6BA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IAE9C,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;IACpC,MAAMK,KAAK,GAAGN,QAAQ,CAAC,CAAC;IAExB,MAAMO,YAAY,GAAGH,GAAG,CAAC,EAAE,CAAC;IAE5B,SAASI,QAAQA,CAACC,KAAK,EAAE;MACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,KAAK,CAAC;IAC5B;IAEAV,SAAS,CAAC,YAAY;MAClB;;MAEA,MAAMW,QAAQ,GAAG,MAAMP,KAAK,CAACQ,QAAQ,CAAC,CAAC;MAEvC,KAAK,IAAIC,MAAM,IAAIF,QAAQ,EAAE;QAAO;QAChC,MAAMG,WAAW,GAAG,MAAMV,KAAK,CAACW,eAAe,CAACF,MAAM,CAACG,EAAE,CAAC,CAAC,CAAC;;QAE5D;QACA,MAAMC,YAAY,GAAG,EAAE,EAAK;;QAE5B,KAAK,IAAIC,aAAa,IAAIJ,WAAW,EAAE;UAAK;;UAExC;UACA,MAAMK,OAAO,GAAG,MAAMhB,WAAW,CAACiB,cAAc,CAACF,aAAa,CAACG,SAAS,CAAC;;UAEzE;UACA,MAAMC,KAAK,GAAG;YACVD,SAAS,EAAEF,OAAO,CAACH,EAAE;YACrBO,KAAK,EAAEJ,OAAO,CAACI,KAAK;YACpBC,QAAQ,EAAEL,OAAO,CAACK,QAAQ;YAC1BC,QAAQ,EAAEP,aAAa,CAACO,QAAQ;YAChCC,UAAU,EAAER,aAAa,CAACQ;UAC9B,CAAC;UACDT,YAAY,CAACU,IAAI,CAACL,KAAK,CAAC;QAC5B;QAEA,MAAMM,kBAAkB,GAAG3B,QAAQ,CAAC;UAChC4B,OAAO,EAAEhB,MAAM,CAACG,EAAE;UAClBO,KAAK,EAAEN,YAAY,CAAC,CAAC,CAAC,CAACM,KAAK,GAAI,IAAGT,WAAW,CAACgB,MAAO,KAAI;UAC1DC,QAAQ,EAAElB,MAAM,CAACmB,SAAS;UAC1BN,UAAU,EAAEb,MAAM,CAACa,UAAU;UAC7BF,QAAQ,EAAEP,YAAY,CAAC,CAAC,CAAC,CAACO,QAAQ;UAClCS,YAAY,EAAEhB;QAClB,CAAC,CAAC;QAEFZ,YAAY,CAACK,KAAK,CAACiB,IAAI,CAACC,kBAAkB,CAAC;MAC/C;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}