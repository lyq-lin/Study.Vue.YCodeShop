{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"购物车页面\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, $setup.CartProducts.length > 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, \"您尚未添加购物车~~~\"))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","$setup","CartProducts","length","_createElementBlock","_Fragment","key","_hoisted_2"],"sources":["D:\\PersonalFile\\WebStudy\\myShop-vue\\myshop-vue\\src\\pages\\Cart\\Cart.vue"],"sourcesContent":["<template>\r\n    <h1>购物车页面</h1>\r\n    <template v-if=\"CartProducts.length > 0\">\r\n\r\n    </template>\r\n\r\n    <template v-else>\r\n        <h2>您尚未添加购物车~~~</h2>\r\n    </template>\r\n</template>\r\n\r\n<script setup>\r\nimport useCart from \"@/stores/useCart\";\r\nimport useProductList from \"@/stores/useProductList\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\"\r\n\r\nconst ProductList = useProductList();\r\nconst router = useRouter();\r\nconst Cart = useCart();\r\nconst CartProducts = ref([])\r\n\r\nonMounted(async () => {\r\n    Cart.CartProduct = [];\r\n    //1. 获得购物车数据\r\n    for (let item of Cart.Cart) {\r\n        //2. 根据购物车的ProductId去获取商品\r\n        var product = await ProductList.getProductById(item.ProductId);\r\n        if (product === undefined) {\r\n            continue;\r\n        }\r\n        //3. 根据商品Id和TypeId去查找套餐\r\n        var variantByProduct = await ProductList.getProductVariant(item.ProductId, item.ProductTypeId);\r\n        if (variantByProduct === undefined) {\r\n            continue;\r\n        }\r\n        //4. 定义一个对象按需存储结构\r\n        var cartObj = {\r\n            ProductId: product.id,\r\n            Title: product.title,\r\n            ImageUrl: product.imageUrl,\r\n            ProductTypeId: variantByProduct.productTypeId,\r\n            ProductType: variantByProduct.productType.name,\r\n            Price: variantByProduct.price,\r\n            Quantity: item.Quantity\r\n        };\r\n        //5. 拼接好数据后存入数组\r\n        Cart.CartProduct.push(cartObj);\r\n    }\r\n    CartProducts.value = Cart.CartProduct\r\n})\r\n\r\nfunction detail(id) {\r\n    router.push({\r\n        path: `/detail/${id}`\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":";gCACIA,mBAAA,CAAc,YAAV,OAAK;;;;;6DAATC,UAAc,EACEC,MAAA,CAAAC,YAAY,CAACC,MAAM,Q,cAAnCC,mBAAA,CAEWC,SAAA;IAAAC,GAAA;EAAA,qC,cAGPF,mBAAA,CAAoB,MAAAG,UAAA,EAAhB,aAAW,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}