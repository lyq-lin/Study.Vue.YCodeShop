{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport useCart from \"@/stores/useCart\";\nimport useProductList from \"@/stores/useProductList\";\nimport { onMounted, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Cart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ProductList = useProductList();\n    const router = useRouter();\n    const Cart = useCart();\n    const CartProducts = ref([]);\n    onMounted(async () => {\n      Cart.CartProduct = [];\n      //1. 获得购物车数据\n      for (let item of Cart.Cart) {\n        //2. 根据购物车的ProductId去获取商品\n        var product = await ProductList.getProductById(item.ProductId);\n        if (product === undefined) {\n          continue;\n        }\n        //3. 根据商品Id和TypeId去查找套餐\n        var variantByProduct = await ProductList.getProductVariant(item.ProductId, item.ProductTypeId);\n        if (variantByProduct === undefined) {\n          continue;\n        }\n        //4. 定义一个对象按需存储结构\n        var cartObj = {\n          ProductId: product.id,\n          Title: product.title,\n          ImageUrl: product.imageUrl,\n          ProductTypeId: variantByProduct.productTypeId,\n          ProductType: variantByProduct.productType.name,\n          Price: variantByProduct.price,\n          Quantity: item.Quantity\n        };\n        //5. 拼接好数据后存入数组\n        Cart.CartProduct.push(cartObj);\n      }\n      CartProducts.value = Cart.CartProduct;\n    });\n    function detail(id) {\n      router.push({\n        path: `/detail/${id}`\n      });\n    }\n    const __returned__ = {\n      ProductList,\n      router,\n      Cart,\n      CartProducts,\n      detail,\n      get useCart() {\n        return useCart;\n      },\n      get useProductList() {\n        return useProductList;\n      },\n      onMounted,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useCart","useProductList","onMounted","ref","useRouter","ProductList","router","Cart","CartProducts","CartProduct","item","product","getProductById","ProductId","undefined","variantByProduct","getProductVariant","ProductTypeId","cartObj","id","Title","title","ImageUrl","imageUrl","productTypeId","ProductType","productType","name","Price","price","Quantity","push","value","detail","path"],"sources":["D:/PersonalFile/WebStudy/myShop-vue/myshop-vue/src/pages/Cart/Cart.vue"],"sourcesContent":["<template>\r\n    <h1>购物车页面</h1>\r\n    <template v-if=\"CartProducts.length > 0\">\r\n        <template v-for=\"(product, index) in CartProducts\" :key=\"index\">\r\n            <div class=\"container\">\r\n                <div class=\"image-wrapper\">\r\n                    <img :src=\"product.ImageUrl\" :alt=\"product.Title\">\r\n                </div>\r\n\r\n                <div class=\"name\">\r\n                    <h4>\r\n                        <a @click=\"detail(product.ProductId)\">\r\n                            {{ product.Title }}\r\n                        </a>\r\n                    </h4>\r\n\r\n                    当前选择的套餐是:\r\n                    <span class=\"productType\">\r\n                        {{ product.ProductType }}\r\n                    </span>\r\n                    <br>\r\n\r\n                    <el-input-number v-model=\"product.Quantity\" :min=\"1\" :max=\"10\" @change=\"handleChange(product)\"\r\n                        size=\"small\" />\r\n\r\n                    <button class=\"btn-delete\" @click=\"removeProductFromCart(product, index)\">\r\n                        移出购物车\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"cart-product-price\">\r\n                    ￥{{ product.Price * product.Quantity }} 元\r\n                </div>\r\n            </div>\r\n        </template>\r\n\r\n        <div class=\"cart-product-price\">\r\n            Total ({{ CartProducts.length }}) : ￥{{ Cart.CartProduct.reduce((total, item) => total + item.Price *\r\n                item.Quantity,\r\n                0).toFixed(2) }} 元\r\n        </div>\r\n\r\n    </template>\r\n\r\n    <template v-else>\r\n        <h2>您尚未添加购物车~~~</h2>\r\n    </template>\r\n</template>\r\n\r\n<script setup>\r\nimport useCart from \"@/stores/useCart\";\r\nimport useProductList from \"@/stores/useProductList\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\"\r\n\r\nconst ProductList = useProductList();\r\nconst router = useRouter();\r\nconst Cart = useCart();\r\nconst CartProducts = ref([])\r\n\r\nonMounted(async () => {\r\n    Cart.CartProduct = [];\r\n    //1. 获得购物车数据\r\n    for (let item of Cart.Cart) {\r\n        //2. 根据购物车的ProductId去获取商品\r\n        var product = await ProductList.getProductById(item.ProductId);\r\n        if (product === undefined) {\r\n            continue;\r\n        }\r\n        //3. 根据商品Id和TypeId去查找套餐\r\n        var variantByProduct = await ProductList.getProductVariant(item.ProductId, item.ProductTypeId);\r\n        if (variantByProduct === undefined) {\r\n            continue;\r\n        }\r\n        //4. 定义一个对象按需存储结构\r\n        var cartObj = {\r\n            ProductId: product.id,\r\n            Title: product.title,\r\n            ImageUrl: product.imageUrl,\r\n            ProductTypeId: variantByProduct.productTypeId,\r\n            ProductType: variantByProduct.productType.name,\r\n            Price: variantByProduct.price,\r\n            Quantity: item.Quantity\r\n        };\r\n        //5. 拼接好数据后存入数组\r\n        Cart.CartProduct.push(cartObj);\r\n    }\r\n    CartProducts.value = Cart.CartProduct\r\n})\r\n\r\nfunction detail(id) {\r\n    router.push({\r\n        path: `/detail/${id}`\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":";AAkDA,OAAOA,OAAO,MAAM,kBAAkB;AACtC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;IACpC,MAAMK,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGP,OAAO,CAAC,CAAC;IACtB,MAAMQ,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAE5BD,SAAS,CAAC,YAAY;MAClBK,IAAI,CAACE,WAAW,GAAG,EAAE;MACrB;MACA,KAAK,IAAIC,IAAI,IAAIH,IAAI,CAACA,IAAI,EAAE;QACxB;QACA,IAAII,OAAO,GAAG,MAAMN,WAAW,CAACO,cAAc,CAACF,IAAI,CAACG,SAAS,CAAC;QAC9D,IAAIF,OAAO,KAAKG,SAAS,EAAE;UACvB;QACJ;QACA;QACA,IAAIC,gBAAgB,GAAG,MAAMV,WAAW,CAACW,iBAAiB,CAACN,IAAI,CAACG,SAAS,EAAEH,IAAI,CAACO,aAAa,CAAC;QAC9F,IAAIF,gBAAgB,KAAKD,SAAS,EAAE;UAChC;QACJ;QACA;QACA,IAAII,OAAO,GAAG;UACVL,SAAS,EAAEF,OAAO,CAACQ,EAAE;UACrBC,KAAK,EAAET,OAAO,CAACU,KAAK;UACpBC,QAAQ,EAAEX,OAAO,CAACY,QAAQ;UAC1BN,aAAa,EAAEF,gBAAgB,CAACS,aAAa;UAC7CC,WAAW,EAAEV,gBAAgB,CAACW,WAAW,CAACC,IAAI;UAC9CC,KAAK,EAAEb,gBAAgB,CAACc,KAAK;UAC7BC,QAAQ,EAAEpB,IAAI,CAACoB;QACnB,CAAC;QACD;QACAvB,IAAI,CAACE,WAAW,CAACsB,IAAI,CAACb,OAAO,CAAC;MAClC;MACAV,YAAY,CAACwB,KAAK,GAAGzB,IAAI,CAACE,WAAW;IACzC,CAAC,CAAC;IAEF,SAASwB,MAAMA,CAACd,EAAE,EAAE;MAChBb,MAAM,CAACyB,IAAI,CAAC;QACRG,IAAI,EAAG,WAAUf,EAAG;MACxB,CAAC,CAAC;IACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}