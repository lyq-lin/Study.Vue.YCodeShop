{"ast":null,"code":"import useCart from \"@/stores/useCart\";\nimport useProductList from \"@/stores/useProductList\";\nimport { onMounted, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Cart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const ProductList = useProductList();\n    const router = useRouter();\n    const Cart = useCart();\n    const CartProducts = ref([]);\n    onMounted(async () => {\n      Cart.CartProduct = [];\n\n      //1. 获得购物车数据\n      for (let item of Cart.Cart) {\n        //2. 根据购物车的ProductId去获取商品\n        var product = await ProductList.getProductById(item.ProductId);\n        if (product === undefined) {}\n        //3. 根据商品Id和TypeId去查找套餐\n        //4. 定义一个对象按需存储结构\n        //5. 拼接好数据后存入数组\n      }\n    });\n\n    const __returned__ = {\n      ProductList,\n      router,\n      Cart,\n      CartProducts,\n      get useCart() {\n        return useCart;\n      },\n      get useProductList() {\n        return useProductList;\n      },\n      onMounted,\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useCart","useProductList","onMounted","ref","useRouter","ProductList","router","Cart","CartProducts","CartProduct","item","product","getProductById","ProductId","undefined"],"sources":["D:/PersonalFile/WebStudy/myShop-vue/myshop-vue/src/pages/Cart/Cart.vue"],"sourcesContent":["<template>\r\n    <h1>购物车页面</h1>\r\n</template>\r\n\r\n<script setup>\r\nimport useCart from \"@/stores/useCart\";\r\nimport useProductList from \"@/stores/useProductList\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\"\r\n\r\nconst ProductList = useProductList();\r\nconst router = useRouter();\r\nconst Cart = useCart();\r\nconst CartProducts = ref([])\r\n\r\nonMounted(async () => {\r\n    Cart.CartProduct = [];\r\n\r\n    //1. 获得购物车数据\r\n    for (let item of Cart.Cart) {\r\n        //2. 根据购物车的ProductId去获取商品\r\n        var product = await ProductList.getProductById(item.ProductId);\r\n        if (product === undefined) {\r\n\r\n        }\r\n        //3. 根据商品Id和TypeId去查找套餐\r\n        //4. 定义一个对象按需存储结构\r\n        //5. 拼接好数据后存入数组\r\n    }\r\n\r\n\r\n})\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":"AAKA,OAAOA,OAAO,MAAM,kBAAkB;AACtC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,WAAW,GAAGJ,cAAc,CAAC,CAAC;IACpC,MAAMK,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,IAAI,GAAGP,OAAO,CAAC,CAAC;IACtB,MAAMQ,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAE5BD,SAAS,CAAC,YAAY;MAClBK,IAAI,CAACE,WAAW,GAAG,EAAE;;MAErB;MACA,KAAK,IAAIC,IAAI,IAAIH,IAAI,CAACA,IAAI,EAAE;QACxB;QACA,IAAII,OAAO,GAAG,MAAMN,WAAW,CAACO,cAAc,CAACF,IAAI,CAACG,SAAS,CAAC;QAC9D,IAAIF,OAAO,KAAKG,SAAS,EAAE,CAE3B;QACA;QACA;QACA;MACJ;IAGJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}