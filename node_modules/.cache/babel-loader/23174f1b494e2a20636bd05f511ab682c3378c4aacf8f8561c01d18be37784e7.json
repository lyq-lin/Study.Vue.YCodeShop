{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d486588e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"已支付订单\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"image-wrapper\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"details\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"order-price\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, $setup.Order.Order.length <= 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"您当前尚未购物\")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($setup.OrderProduct, order => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: order.orderId,\n      class: \"container\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      src: order.imageUrl,\n      class: \"image\"\n    }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h4\", null, _toDisplayString(order.title), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(order.dateTime), 1 /* TEXT */), _createElementVNode(\"a\", {\n      onClick: $event => _ctx.ToDetail(order.orderId)\n    }, \"查看详情\", 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, \"￥\" + _toDisplayString(order.totalPrice), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","$setup","Order","length","_createElementBlock","_hoisted_2","_Fragment","key","_renderList","OrderProduct","order","orderId","_hoisted_3","src","imageUrl","_hoisted_5","_toDisplayString","title","dateTime","onClick","$event","_ctx","ToDetail","_hoisted_6","_hoisted_7","totalPrice"],"sources":["D:\\PersonalFile\\WebStudy\\myShop-vue\\myshop-vue\\src\\pages\\Order\\Order.vue"],"sourcesContent":["<template>\r\n    <h1>已支付订单</h1>\r\n\r\n    <template v-if=\"Order.Order.length <= 0\">\r\n        <span>您当前尚未购物</span>\r\n    </template>\r\n\r\n    <template v-else>\r\n\r\n        <template v-for=\"order in OrderProduct\" :key=\"order.orderId\">\r\n            <div class=\"container\">\r\n                <div class=\"image-wrapper\">\r\n                    <img :src=\"order.imageUrl\" class=\"image\" />\r\n                </div>\r\n                <div class=\"details\">\r\n                    <h4>{{ order.title }}</h4>\r\n                    <span>{{ order.dateTime }}</span>\r\n                    <a @click=\"ToDetail(order.orderId)\">查看详情</a>\r\n                </div>\r\n\r\n                <div class=\"order-price\">￥{{ order.totalPrice }}</div>\r\n            </div>\r\n        </template>\r\n\r\n    </template>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport useOrder from \"@/stores/useOrder\"\r\nimport useProductList from \"@/stores/useProductList\";\r\nimport { onMounted, reactive, ref } from \"vue\";\r\n\r\nconst ProductList = useProductList();\r\nconst Order = useOrder();\r\n\r\n\r\nconst OrderProduct = ref([]);\r\n\r\nonMounted(async () => {\r\n    //组装Product\r\n\r\n    const OrderObj = await Order.getOrder();\r\n\r\n    for (let detail of OrderObj) {      //第一次遍历的是订单\r\n        const OrderDetail = await Order.getOrderDetails(detail.id); //根据订单id去找该订单详情 \r\n\r\n        const titleNames = []       //我需要拼接订单标题\r\n        const defaultImg = []       //我需要订单图片\r\n        const orderdetails = []     //我需要该笔订单的细节\r\n        for (let productDetail of OrderDetail) {    //第二次遍历的是订单里的订单详情\r\n            //向Product发送ProductId 请求商品  \r\n            const product = await ProductList.getProductById(productDetail.productId);\r\n\r\n            //请求到的商品把名字存进来\r\n            titleNames.push(product.title)\r\n\r\n            //把图片存进来\r\n            defaultImg.push(product.imageUrl)\r\n\r\n            //定义一个结构体，存储图片和标题，用于展示订单详情\r\n            const pdObj = {\r\n                productId: product.id,\r\n                title: product.title,\r\n                imageUrl: product.imageUrl\r\n            }\r\n            orderdetails.push(pdObj);\r\n        }\r\n        console.log(titleNames)\r\n\r\n        const OrderProductDetail = reactive({\r\n            orderId: detail.id,\r\n            title: titleNames[0] + `等${OrderDetail.length}件商品`,\r\n            dateTime: detail.orderDate,\r\n            totalPrice: detail.totalPrice,\r\n            imageUrl: defaultImg[0],\r\n            orderDetails: orderdetails\r\n        })\r\n\r\n        OrderProduct.value.push(OrderProductDetail)\r\n    }\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    display: flex;\r\n    padding: 6px;\r\n    border: 1px solid;\r\n    border-radius: 6px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.image-wrapper {\r\n    width: 150px;\r\n    text-align: center;\r\n}\r\n\r\n.image {\r\n    max-height: 150px;\r\n    max-width: 150px;\r\n    padding: 6px;\r\n}\r\n\r\nimg:hover {\r\n    transform: scale(1.1)\r\n}\r\n\r\n.details {\r\n    flex-grow: 1;\r\n    padding: 6px;\r\n    margin-left: 20px;\r\n}\r\n\r\n.order-price {\r\n    font-weight: 600;\r\n    font-size: 1.2em;\r\n    text-align: right;\r\n}\r\n</style>"],"mappings":";;gEACIA,mBAAA,CAAc,YAAV,OAAK;;;;;EAUQC,KAAK,EAAC;AAAe;;;EAGrBA,KAAK,EAAC;AAAS;;;EAMfA,KAAK,EAAC;AAAa;;6DAnBpCC,UAAc,EAEEC,MAAA,CAAAC,KAAK,CAACA,KAAK,CAACC,MAAM,S,cAC9BC,mBAAA,CAAoB,QAAAC,UAAA,EAAd,SAAO,M,kBAKbD,mBAAA,CAaWE,SAAA;IAAAC,GAAA;EAAA,GAAAC,WAAA,CAbeP,MAAA,CAAAQ,YAAY,EAArBC,KAAK;yBAClBN,mBAAA,CAWM;WAZoCM,KAAK,CAACC,OAAO;MAClDZ,KAAK,EAAC;QACPD,mBAAA,CAEM,OAFNc,UAEM,GADFd,mBAAA,CAA2C;MAArCe,GAAG,EAAEH,KAAK,CAACI,QAAQ;MAAEf,KAAK,EAAC;2CAErCD,mBAAA,CAIM,OAJNiB,UAIM,GAHFjB,mBAAA,CAA0B,YAAAkB,gBAAA,CAAnBN,KAAK,CAACO,KAAK,kBAClBnB,mBAAA,CAAiC,cAAAkB,gBAAA,CAAxBN,KAAK,CAACQ,QAAQ,kBACvBpB,mBAAA,CAA4C;MAAxCqB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,QAAQ,CAACZ,KAAK,CAACC,OAAO;OAAG,MAAI,iBAAAY,UAAA,E,GAG5CzB,mBAAA,CAAsD,OAAtD0B,UAAsD,EAA7B,GAAC,GAAAR,gBAAA,CAAGN,KAAK,CAACe,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}